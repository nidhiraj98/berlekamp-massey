# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19DmHiNnGp7YHABK6maBxuB41_2dP1qEE
"""

import matplotlib.image as mpimg 
import matplotlib.pyplot as plt
import numpy as np
from tqdm import tqdm

def load_img(path):
  img = mpimg.imread(path)[:,:,:3]
  return img.astype('float32')

def encode_img(img):
  img_shape = img.shape
  img_size = img_shape[0]*img_shape[1]*img_shape[2]
  img_flat = img.reshape(img_size,1)
  header=""
  info_str = ""
  for num in img_shape:
    for digit in str(num):
      header += bin(ord(digit))[2:].zfill(8) 
      header += bin(ord(','))[2:].zfill(8) 
    header += bin(ord('#'))[2:].zfill(8)
  for pixel in img_flat:
    for char in str(pixel[0]):
      info_str += bin(ord(char))[2:].zfill(8)
    info_str += bin(ord(','))[2:].zfill(8)

  return header + info_str 

def decode_img(encoded_string):
  ascii_string = ''
  for i in tqdm(range(len(encoded_string)//8)) :
    ascii_string = ascii_string + chr(int(encoded_string[i*8:(i+1)*8],2))
  ascii_list = ascii_string.split('#')
  shape =[]
  for shape_num in ascii_list[:-1]:
    individual_num = ''
    shape.append(int(individual_num.join(shape_num.split(','))))
  shape = tuple(shape)
  # print(shape)
  img_flat_decoded = [float(i) for i in ascii_list[-1].split(',')[:-1]]
  img_decoded = np.reshape(img_flat_decoded,shape)

  return img_decoded